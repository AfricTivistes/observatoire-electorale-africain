
---
import Layout from '../../layouts/MainLayout.astro';
import PageHeader from '../../components/PageHeader.tsx';
import { FaExclamationTriangle, FaGavel, FaUsers, FaExclamationCircle, FaMapMarkedAlt, FaFileAlt } from 'react-icons/fa';
import { getCollection } from 'astro:content';

// Récupérer les défis électoraux
const defis = await getCollection('defisElections');

// Grouper les défis par zone
const defisByZone = defis.reduce((acc, defi) => {
  const zone = defi.data.zone || 'Non spécifié';
  if (!acc[zone]) {
    acc[zone] = [];
  }
  acc[zone].push(defi);
  return acc;
}, {});

// Grouper les défis par type
const defisByType = defis.reduce((acc, defi) => {
  const type = defi.data.typeDefi;
  if (!acc[type]) {
    acc[type] = 0;
  }
  acc[type]++;
  return acc;
}, {});

// Définir les stats cards avec les icônes appropriées et les comptages réels
const statsCards = Object.entries(defisByType).map(([type, count]) => {
  const getIcon = (type: string) => {
    switch(type.toLowerCase()) {
      case 'contestation judiciaire': return FaGavel;
      case 'tensions politiques': return FaUsers;
      case 'violences electorales': return FaExclamationCircle;
      case 'problèmes logistiques': return FaMapMarkedAlt;
      case "report d'élections": return FaFileAlt;
      default: return FaExclamationTriangle;
    }
  };

  return {
    icon: getIcon(type),
    count,
    label: type,
    color: 'text-farafina-accent'
  };
});

const zoneMapping = {
  'Nord': 'Afrique du Nord',
  'Ouest': "Afrique de l'Ouest",
  'Centre': 'Afrique Centrale',
  'Est': "Afrique de l'Est",
  'Sud': 'Afrique Australe'
};
---

<Layout title="Défis Électoraux | Observatoire des Élections en Afrique">
  <PageHeader
    title="Défis Électoraux"
    subtitle="Analyse des défis et obstacles rencontrés lors des processus électoraux en Afrique"
    breadcrumbs={[
      { label: 'Accueil', href: '/' },
      { label: 'Élections', href: '/elections' },
      { label: 'Défis Électoraux' }
    ]}
  >
    <FaExclamationTriangle class="text-farafina-accent text-3xl" slot="icon" />
  </PageHeader>

  <div class="container mx-auto px-4 py-8">
  <!-- Introduction -->
  <div class="bg-white rounded-lg shadow-md p-6 mb-8">
    <h2 class="text-2xl font-bold text-farafina-dark mb-4">Vue d'ensemble des défis électoraux</h2>
    <p class="text-gray-700 mb-6">
      Les processus électoraux en Afrique font face à divers défis qui peuvent affecter leur intégrité, leur transparence et leur inclusivité. 
      Cette section présente une analyse des principaux obstacles rencontrés, des études de cas et des recommandations pour renforcer 
      les systèmes électoraux à travers le continent.
    </p>
    <!-- Statistiques des défis -->
    <div class="grid grid-cols-2 md:grid-cols-5 gap-4 mb-6">
      {statsCards.map(({ icon: Icon, count, label }) => (
        <div class="bg-white/80 backdrop-blur-sm rounded-lg p-4 text-center hover:shadow-lg transition-all duration-300 border border-farafina-accent/10">
          <div class="flex justify-center mb-2">
            <div class="w-12 h-12 rounded-full bg-farafina-accent/10 flex items-center justify-center">
              <Icon className="text-2xl text-farafina-accent" />
            </div>
          </div>
          <span class="block text-2xl font-bold text-farafina-accent mb-2">{count}</span>
          <span class="text-sm text-gray-600">{label}</span>
        </div>
      ))}
    </div>

    <!-- Répartition géographique -->
    <h2 class="text-2xl font-bold text-farafina-dark mb-6">Répartition géographique des défis</h2>
    <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-5 gap-4 mb-12">
      {Object.entries(defisByZone).map(([zone, zoneDefis]) => (
        <div class="bg-white rounded-lg shadow-md p-6 text-center hover:shadow-lg transition-shadow duration-300">
          <h3 class="text-lg font-semibold text-farafina-dark mb-3">{zoneMapping[zone] || zone}</h3>
          <div class="text-3xl font-bold text-farafina-accent mb-2">{zoneDefis.length}</div>
          <p class="text-sm text-gray-600">défis identifiés</p>
        </div>
      ))}
    </div>

    <!-- Répartition par type de défis -->
    <div class="mb-12">
      <h2 class="text-2xl font-bold text-farafina-dark mb-6">Défis par Type</h2>
      <div class="space-y-6">
        {Object.entries(defisByType).map(([type, count]) => {
          const defisOfType = defis.filter(defi => defi.data.typeDefi === type);
          const initialCount = 2;
          return (
            <div class="bg-white rounded-lg shadow-md p-6">
              <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-semibold text-farafina-accent">{type}</h3>
                <span class="bg-farafina-accent/10 text-farafina-accent px-3 py-1 rounded-full text-sm">
                  {count} défis
                </span>
              </div>
              <div class="space-y-4" id={`defis-type-${type}`}>
                {defisOfType.slice(0, initialCount).map((defi) => (
                  <div class="border-l-4 border-farafina-accent bg-gray-50 rounded-lg p-4">
                    <div class="flex justify-between items-start">
                      <div class="flex items-center gap-3">
                        <a href={`/countries/${defi.data.code_pays.toLowerCase()}`}>
                          <img
                            src={`https://flagcdn.com/w40/${defi.data.code_pays.toLowerCase()}.webp`}
                            alt={`Drapeau ${defi.data.nomPays}`}
                            class="w-8 h-6 object-cover rounded shadow-sm"
                          />
                        </a>
                        <div>
                          <h4 class="font-semibold text-farafina-dark">
                            <a href={`/countries/${defi.data.code_pays.toLowerCase()}`} class="hover:text-farafina-accent">
                              {defi.data.nomPays}
                            </a>
                          </h4>
                        </div>
                      </div>
                      <a
                        href={defi.data.sourceDefi}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="text-sm text-farafina-accent hover:underline"
                      >
                        Source
                      </a>
                    </div>
                    <p class="text-gray-600 mt-2">{defi.data.libelleDefis}</p>
                  </div>
                ))}
                {defisOfType.length > initialCount && (
                  <div class="hidden" id={`defis-type-more-${type}`}>
                    {defisOfType.slice(initialCount).map((defi) => (
                      <div class="border-l-4 border-farafina-accent bg-gray-50 rounded-lg p-4 mt-4">
                        <div class="flex justify-between items-start">
                          <div class="flex items-center gap-3">
                            <a href={`/countries/${defi.data.code_pays.toLowerCase()}`}>
                              <img
                                src={`https://flagcdn.com/w40/${defi.data.code_pays.toLowerCase()}.webp`}
                                alt={`Drapeau ${defi.data.nomPays}`}
                                class="w-8 h-6 object-cover rounded shadow-sm"
                              />
                            </a>
                            <div>
                              <h4 class="font-semibold text-farafina-dark">
                                <a href={`/countries/${defi.data.code_pays.toLowerCase()}`} class="hover:text-farafina-accent">
                                  {defi.data.nomPays}
                                </a>
                              </h4>
                            </div>
                          </div>
                          <a
                            href={defi.data.sourceDefi}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-sm text-farafina-accent hover:underline"
                          >
                            Source
                          </a>
                        </div>
                        <p class="text-gray-600 mt-2">{defi.data.libelleDefis}</p>
                      </div>
                    ))}
                  </div>
                )}
                {defisOfType.length > initialCount && (
                  <button
                    class="px-4 py-2 bg-farafina-accent text-white rounded-lg hover:bg-farafina-accent/90 transition-colors w-full"
                    onclick={`
                      const moreContent = document.getElementById('defis-type-more-${type}');
                      const isHidden = moreContent.classList.contains('hidden');
                      moreContent.classList.toggle('hidden');
                      this.innerHTML = isHidden ? 
                        '<span>Voir moins</span>' : 
                        '<span>Voir plus</span>';
                    `}
                  >
                    <span>Voir plus</span>
                  </button>
                )}
              </div>
            </div>
          );
        })}
      </div>
    </div>

    <!-- Liste détaillée des défis par zone -->
    {Object.entries(defisByZone).map(([zone, zoneDefis]) => {
      const initialCount = 2;
      return (
        <div class="bg-white rounded-lg shadow-md p-6 mb-8 hover:shadow-lg transition-shadow duration-300">
          <div class="flex justify-between items-center mb-6">
            <h2 class="text-2xl font-bold text-farafina-dark">{zoneMapping[zone] || zone}</h2>
            <span class="bg-farafina-accent/10 text-farafina-accent px-3 py-1 rounded-full text-sm">
              {zoneDefis.length} défis
            </span>
          </div>
          <div class="space-y-4" id={`defis-${zone}`}>
            {zoneDefis.slice(0, initialCount).map((defi) => (
              <div class="border-l-4 border-farafina-accent bg-gray-50 rounded-lg p-4">
                <div class="flex justify-between items-start">
                  <div class="flex items-center gap-3">
                    <a href={`/countries/${defi.data.code_pays.toLowerCase()}`}>
                      <img
                        src={`https://flagcdn.com/w40/${defi.data.code_pays.toLowerCase()}.webp`}
                        alt={`Drapeau ${defi.data.nomPays}`}
                        class="w-8 h-6 object-cover rounded shadow-sm"
                      />
                    </a>
                    <div>
                      <h3 class="font-semibold text-farafina-dark">
                        <a href={`/countries/${defi.data.code_pays.toLowerCase()}`} class="hover:text-farafina-accent">
                          {defi.data.nomPays}
                        </a>
                      </h3>
                      <p class="text-sm font-medium text-farafina-accent mt-1">{defi.data.typeDefi}</p>
                    </div>
                  </div>
                  <a
                    href={defi.data.sourceDefi}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="text-sm text-farafina-accent hover:underline"
                  >
                    Source
                  </a>
                </div>
                <p class="text-gray-600 mt-2">{defi.data.libelleDefis}</p>
              </div>
            ))}
            {zoneDefis.length > initialCount && (
              <div class="hidden" id={`defis-more-${zone}`}>
                {zoneDefis.slice(initialCount).map((defi) => (
                  <div class="border-l-4 border-farafina-accent bg-gray-50 rounded-lg p-4 mt-4">
                    <div class="flex justify-between items-start">
                      <div class="flex items-center gap-3">
                        <a href={`/countries/${defi.data.code_pays.toLowerCase()}`}>
                          <img
                            src={`https://flagcdn.com/w40/${defi.data.code_pays.toLowerCase()}.webp`}
                            alt={`Drapeau ${defi.data.nomPays}`}
                            class="w-8 h-6 object-cover rounded shadow-sm"
                          />
                        </a>
                        <div>
                          <h3 class="font-semibold text-farafina-dark">
                            <a href={`/countries/${defi.data.code_pays.toLowerCase()}`} class="hover:text-farafina-accent">
                              {defi.data.nomPays}
                            </a>
                          </h3>
                          <p class="text-sm font-medium text-farafina-accent mt-1">{defi.data.typeDefi}</p>
                        </div>
                      </div>
                      <a
                        href={defi.data.sourceDefi}
                        target="_blank"
                        rel="noopener noreferrer"
                        class="text-sm text-farafina-accent hover:underline"
                      >
                        Source
                      </a>
                    </div>
                    <p class="text-gray-600 mt-2">{defi.data.libelleDefis}</p>
                  </div>
                ))}
              </div>
            )}
            {zoneDefis.length > initialCount && (
              <button
                class="mt-4 px-4 py-2 bg-farafina-accent text-white rounded-lg hover:bg-farafina-accent/90 transition-colors w-full"
                onclick={`
                  const moreContent = document.getElementById('defis-more-${zone}');
                  const isHidden = moreContent.classList.contains('hidden');
                  moreContent.classList.toggle('hidden');
                  this.textContent = isHidden ? 'Voir moins' : 'Voir plus';
                `}
              >
                Voir plus
              </button>
            )}
          </div>
        </div>
      );
    })}
  </div>
</Layout>
