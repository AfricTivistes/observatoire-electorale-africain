` tags. I will pay close attention to indentation, structure, and avoid any forbidden words or placeholders.

```
<replit_final_file>
---
import Layout from '../../layouts/MainLayout.astro';
import OrganizationsHero from '../../components/organizations/OrganizationsHero.astro';
import OrganizationCard from '../../components/organizations/OrganizationCard.astro';
import OrganizationFilter from '../../components/organizations/OrganizationFilter.astro';
import { FaUsers, FaHandshake, FaGlobeAfrica, FaChartBar, FaBuilding } from 'react-icons/fa';
import { getCollection } from 'astro:content';

// Récupération des données depuis NocoDB
const organisationsCollection = await getCollection('organisations');
const paysCollection = await getCollection('pays');
const electionsCollection = await getCollection('elections');

// Transformation des données pour le composant
const allOrganizations = organisationsCollection.map(org => ({
  id: org.id,
  name: org.data.nom,
  country: org.data.pays || 'Non spécifié',
  city: org.data.ville || 'Non spécifié',
  type: org.data.typeOrganisation || 'Organisation',
  expertise: org.data.domainesExpertise ? org.data.domainesExpertise.split(',').map(d => d.trim()) : [],
  zone: org.data.zone,
  typeOrganisation: org.data.typeOrganisation || '',
  domainesExpertise: org.data.domainesExpertise || '',
  website: org.data.siteweb || '',
  email: org.data.email || '',
  phone: org.data.telephone || '',
  creationYear: org.data.anneeDeCreation || null,
  countriesCovered: org.data.nombreDePaysCouverts || '',
  observerMobilization: org.data.mobilisationsObservateurs || '',
  description: `Organisation ${org.data.typeOrganisation} basée à ${org.data.ville || 'localisation non spécifiée'}, couvrant ${org.data.nombreDePaysCouverts || '1'} pays.`
}));

// Statistiques Notre Réseau
const networkStats = [
  { 
    icon: FaUsers, 
    value: organisationsCollection.length.toString(), 
    label: "Organisations Partenaires",
    color: "bg-farafina-primary/10",
    textColor: "text-farafina-primary"
  },
  { 
    icon: FaHandshake, 
    value: paysCollection.length.toString(), 
    label: "Pays Représentés",
    color: "bg-farafina-secondary/10",
    textColor: "text-farafina-secondary"
  },
  { 
    icon: FaGlobeAfrica, 
    value: "5", 
    label: "Régions Africaines",
    color: "bg-farafina-accent/10",
    textColor: "text-farafina-accent"
  },
  { 
    icon: FaChartBar, 
    value: electionsCollection.length.toString(), 
    label: "Élections Observées",
    color: "bg-farafina-blue/10",
    textColor: "text-farafina-blue"
  },
];

// Calcul des types d'organisations
const organizationTypes = organisationsCollection.reduce((acc, org) => {
  const type = org.data.typeOrganisation || 'Autre';
  acc[type] = (acc[type] || 0) + 1;
  return acc;
}, {});

// Grouper les organisations par zone géographique
const organizationsByZone = (() => {
  const zoneMap = new Map();

  allOrganizations.forEach(org => {
    let zones = [];

    if (Array.isArray(org.zone)) {
      zones = org.zone.filter(z => z && z !== null && z !== "");
    } else if (org.zone && org.zone !== null && org.zone !== "") {
      zones = [org.zone];
    }

    // Si aucune zone valide, ajouter à "Zone non spécifiée"
    if (zones.length === 0) {
      zones = ["Zone non spécifiée"];
    }

    zones.forEach(zone => {
      if (!zoneMap.has(zone)) {
        zoneMap.set(zone, []);
      }
      zoneMap.get(zone).push(org);
    });
  });

  return Array.from(zoneMap.entries())
    .map(([zone, organizations]) => ({
      zone,
      organizations,
      count: organizations.length
    }))
    .sort((a, b) => a.zone.localeCompare(b.zone));
})();
---

<Layout title="Organisations | Observatoire des Élections en Afrique">
  <OrganizationsHero organizations={allOrganizations} />

  <div class="container mx-auto px-4 py-12">

    <!-- Section Notre Réseau -->
    <section class="mb-16">
      <div class="bg-white rounded-xl shadow-md p-8">
        <div class="text-center mb-8">
          <h2 class="text-3xl font-bold text-farafina-dark mb-4">Notre Réseau</h2>
          <p class="text-gray-600 max-w-2xl mx-auto">
            Un écosystème dynamique d'organisations engagées pour la transparence et l'intégrité des processus électoraux en Afrique.
          </p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {networkStats.map(stat => (
            <div class={`${stat.color} rounded-lg p-6 text-center transition-transform hover:scale-105`}>
              <div class="flex justify-center mb-4">
                <stat.icon className={`${stat.textColor} text-4xl`} />
              </div>
              <div class={`text-3xl font-bold ${stat.textColor} mb-2`}>{stat.value}</div>
              <div class="text-gray-700 font-medium">{stat.label}</div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Section Types d'Organisations -->
    <section class="mb-16">
      <div class="bg-white rounded-xl shadow-md p-8">
        <div class="text-center mb-8">
          <h2 class="text-3xl font-bold text-farafina-dark mb-4">Types d'Organisations</h2>
          <p class="text-gray-600 max-w-2xl mx-auto">
            Diversité des acteurs impliqués dans l'observation électorale et la promotion démocratique.
          </p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {Object.entries(organizationTypes).map(([type, count]) => (
            <div class="bg-gradient-to-br from-farafina-primary/5 to-farafina-primary/10 border border-farafina-primary/20 rounded-lg p-6 hover:shadow-md transition-shadow">
              <div class="flex items-center mb-4">
                <div class="w-12 h-12 bg-farafina-primary/20 rounded-lg flex items-center justify-center mr-4">
                  <FaBuilding className="text-farafina-primary text-xl" />
                </div>
                <div>
                  <h3 class="font-semibold text-farafina-dark text-lg">{type}</h3>
                  <p class="text-sm text-gray-600">organisations</p>
                </div>
              </div>
              <div class="text-right">
                <div class="text-3xl font-bold text-farafina-primary">{count}</div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Sections par Zone Géographique -->
    <section class="mb-16">
      <div class="text-center mb-12">
        <h2 class="text-3xl font-bold text-farafina-dark mb-4">Répartition par Zone Géographique</h2>
        <p class="text-gray-600 max-w-2xl mx-auto">
          Découvrez la présence de nos organisations partenaires à travers le continent africain.
        </p>
      </div>

      {organizationsByZone.map(({ zone, organizations: zoneOrgs, count }) => (
        <div class="mb-12">
          <div class="bg-white rounded-xl shadow-md overflow-hidden">
            <!-- En-tête de zone -->
            <div class="bg-gradient-to-r from-farafina-primary to-farafina-secondary p-6">
              <div class="flex items-center justify-between">
                <div class="flex items-center text-white">
                  <div class="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center mr-4">
                    <FaGlobeAfrica className="text-white text-xl" />
                  </div>
                  <div>
                    <h3 class="text-2xl font-bold">{zone}</h3>
                    <p class="text-white/90">{count} organisation{count > 1 ? 's' : ''}</p>
                  </div>
                </div>
                <div class="text-white/80 text-sm">
                  {Math.round((count / allOrganizations.length) * 100)}% du réseau
                </div>
              </div>
            </div>

            <!-- Grille des organisations -->
            <div class="p-6">
              <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {zoneOrgs.map(org => (
                  <OrganizationCard organization={org} />
                ))}
              </div>
            </div>
          </div>
        </div>
      ))}
    </section>

    <!-- Section Acteurs Clés avec Filtres -->
    <section id="acteurs-cles-section" class="mb-16">
      <div class="text-center mb-8">
        <h2 class="text-3xl font-bold text-farafina-dark mb-4">Tous les Acteurs Clés</h2>
        <p class="text-gray-600">Explorez l'ensemble de notre réseau d'organisations partenaires</p>
      </div>

      <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
        <!-- Filtres -->
        <div class="lg:col-span-1">
          <OrganizationFilter organizations={allOrganizations} />
        </div>

        <!-- Liste des organisations -->
        <div class="lg:col-span-3">
          <div class="bg-white rounded-xl shadow-md p-6">
            <div class="flex justify-between items-center mb-6">
              <h3 class="text-xl font-semibold text-farafina-dark">Résultats</h3>
              <div class="text-sm text-gray-600" id="organization-count">
                Affichage de {allOrganizations.length} organisations
              </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6" id="organizations-list">
              {allOrganizations.map(org => (
                <OrganizationCard organization={org} />
              ))}
            </div>

            <!-- Message si aucun résultat -->
            <div id="no-results" class="text-center py-12 hidden">
              <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
                <FaUsers className="text-gray-400 text-2xl" />
              </div>
              <p class="text-gray-500 text-lg mb-2">Aucune organisation trouvée</p>
              <p class="text-gray-400 text-sm">Essayez de modifier vos critères de recherche</p>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Appel à l'action -->
    <section class="mb-16">
      <div class="bg-gradient-to-r from-farafina-primary to-farafina-secondary rounded-xl shadow-lg overflow-hidden">
        <div class="grid grid-cols-1 md:grid-cols-2">
          <div class="p-8 text-white">
            <h2 class="text-3xl font-bold mb-4">Rejoignez Notre Réseau</h2>
            <p class="mb-6 text-white/90 text-lg">
              Votre organisation œuvre pour la démocratie et la transparence électorale ? 
              Rejoignez notre communauté d'acteurs engagés pour l'avenir démocratique de l'Afrique.
            </p>
            <div class="space-y-4 mb-6">
              <div class="flex items-center">
                <div class="w-2 h-2 bg-white rounded-full mr-3"></div>
                <span class="text-white/90">Accès à notre plateforme collaborative</span>
              </div>
              <div class="flex items-center">
                <div class="w-2 h-2 bg-white rounded-full mr-3"></div>
                <span class="text-white/90">Programmes de formation et de renforcement</span>
              </div>
              <div class="flex items-center">
                <div class="w-2 h-2 bg-white rounded-full mr-3"></div>
                <span class="text-white/90">Visibilité à travers notre réseau continental</span>
              </div>
            </div>
            <a 
              href="/contact" 
              class="inline-block px-8 py-4 bg-white text-farafina-primary font-semibold rounded-lg hover:bg-white/90 transition-colors shadow-lg"
            >
              Devenir Partenaire
            </a>
          </div>
          <div class="hidden md:block relative">
            <img 
              src="https://images.unsplash.com/photo-1582213782179-e0d53f98f2ca?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80" 
              alt="Collaboration entre organisations" 
              class="w-full h-full object-cover"
            />
            <div class="absolute inset-0 bg-black/20"></div>
          </div>
        </div>
      </div>
    </section>
  </div>

  <script is:inline define:vars={{ allOrganizations }}>
    document.addEventListener('DOMContentLoaded', function() {
      const organizationsList = document.getElementById('organizations-list');
      const organizationCount = document.getElementById('organization-count');
      const noResults = document.getElementById('no-results');

      let currentFilters = {
        expertise: [],
        regions: [],
        types: [],
        searchTerm: ''
      };

      // Fonction pour appliquer tous les filtres
      function applyAllFilters() {
        let filteredOrgs = allOrganizations;

        // Filtre par recherche
        if (currentFilters.searchTerm) {
          filteredOrgs = filteredOrgs.filter(org => 
            org.name.toLowerCase().includes(currentFilters.searchTerm) ||
            org.country.toLowerCase().includes(currentFilters.searchTerm) ||
            org.type.toLowerCase().includes(currentFilters.searchTerm) ||
            (org.expertise && org.expertise.some(exp => 
              exp.toLowerCase().includes(currentFilters.searchTerm)
            ))
          );
        }

        // Filtre par expertise
        if (currentFilters.expertise.length > 0) {
          filteredOrgs = filteredOrgs.filter(org => 
            org.expertise && org.expertise.some(exp => 
              currentFilters.expertise.some(filterExp => 
                exp.toLowerCase().includes(filterExp.toLowerCase())
              )
            )
          );
        }

        // Filtre par type
        if (currentFilters.types.length > 0) {
          filteredOrgs = filteredOrgs.filter(org => 
            currentFilters.types.includes(org.type)
          );
        }

        // Filtre par région
        if (currentFilters.regions.length > 0) {
          filteredOrgs = filteredOrgs.filter(org => {
            if (Array.isArray(org.zone)) {
              return org.zone.some(z => currentFilters.regions.includes(z));
            } else if (org.zone) {
              return currentFilters.regions.includes(org.zone);
            }
            return false;
          });
        }

        showOrganizations(filteredOrgs);
      }

      // Écouter l'événement de recherche depuis le composant Hero
      window.addEventListener('organizationSearch', function(event) {
        currentFilters.searchTerm = event.detail.searchTerm.toLowerCase().trim();
        applyAllFilters();
      });

      // Écouter l'événement de filtrage depuis le composant Filter
      window.addEventListener('organizationFilter', function(event) {
        currentFilters.expertise = event.detail.expertise;
        currentFilters.regions = event.detail.regions;
        currentFilters.types = event.detail.types;
        applyAllFilters();
      });

      function showOrganizations(organizations) {
        if (organizations.length === 0) {
          organizationsList.classList.add('hidden');
          noResults.classList.remove('hidden');
          organizationCount.textContent = 'Aucune organisation trouvée';
        } else {
          organizationsList.classList.remove('hidden');
          noResults.classList.add('hidden');
          organizationCount.textContent = `Affichage de ${organizations.length} organisation${organizations.length > 1 ? 's' : ''}`;

          // Réafficher les cartes d'organisations
          organizationsList.innerHTML = organizations.map(org => `
            <div class="bg-white border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow cursor-pointer" onclick="window.location.href='/organizations/${org.id}'">
              <div class="flex items-center mb-3">
                <div class="w-10 h-10 bg-farafina-primary/10 rounded-lg flex items-center justify-center mr-3 flex-shrink-0">
                  <div class="text-farafina-primary text-lg">
                    ${getOrganizationIcon(org.type)}
                  </div>
                </div>
                <div class="flex-1 min-w-0">
                  <h3 class="font-semibold text-farafina-dark truncate">${org.name}</h3>
                  <p class="text-sm text-gray-600">${org.country}</p>
                </div>
              </div>
              <div class="mb-3">
                <span class="inline-block px-2 py-1 bg-farafina-primary/10 text-farafina-primary rounded text-xs font-medium">
                  ${org.type}
                </span>
              </div>
              <p class="text-sm text-gray-600 line-clamp-2 mb-3">${org.description}</p>
              ${org.expertise.length > 0 ? `
                <div class="flex flex-wrap gap-1">
                  ${org.expertise.slice(0, 2).map(exp => 
                    `<span class="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs">${exp}</span>`
                  ).join('')}
                  ${org.expertise.length > 2 ? `<span class="px-2 py-1 bg-gray-100 text-gray-700 rounded text-xs">+${org.expertise.length - 2}</span>` : ''}
                </div>
              ` : ''}
            </div>
          `).join('');
        }
      }

      function getOrganizationIcon(type) {
        const iconMap = {
          'ONG': '👥',
          'Organisation internationale': '🌍',
          'Institution gouvernementale': '🏛️',
          'Réseau régional': '🔗',
          'Centre de recherche': '🎓',
          'default': '🏢'
        };
        return iconMap[type] || iconMap['default'];
      }
    });
  </script>
</Layout>