---
import { getCollection } from "astro:content";
import Layout from "../../layouts/MainLayout.astro";
import PageHeader from "../../components/PageHeader.tsx";
import CountryCard from "../../components/countries/CountryCard.tsx";
import DemographicChart from "../../components/countries/DemographicChart.tsx";
import LegalFramework from "../../components/countries/LegalFramework.tsx";
import ElectionTimeline from "../../components/countries/ElectionTimeline.tsx";
import AfricaMap from "../../components/countries/AfricaMap.tsx";
import ToCountryLink from "@/components/common/ToCountryLink.astro";
import {
  FaGlobeAfrica,
  FaVoteYea,
  FaBalanceScale,
  FaUsers,
  FaChartBar,
  FaCalendarAlt,
  FaExclamationTriangle,
  FaTwitter,
  FaLinkedin,
  FaFacebookF,
  FaEnvelope,
} from "react-icons/fa";
import { Image } from "astro:assets";

export async function getStaticPaths() {
  const pays = await getCollection("pays");

  return pays.map((entry) => ({
    params: { code: entry.data.code?.toLowerCase() },
    props: {
      country: entry.data,
    },
  }));
}

const { country } = Astro.props;

const ressources = await getCollection("ressources");
const elections = await getCollection("elections");
const resultatsElections = await getCollection("resultatsElections");
const defis = await getCollection("defisElections");
const organismesElectoraux = await getCollection("organismesElectoraux");
const organisations = await getCollection("organisations");

const legalFramework3 = ressources?.filter(
  (ressource) => ressource.data.Pays_id === country.id,
);
const organismes = organismesElectoraux?.filter(
  (organisme) => organisme.data.Pays_id === country.id,
);

const electionEvents3 = elections
  ?.filter((election) => election.data.Pays_id === country.id)
  .sort((a, b) => {
    const dateA = new Date(a.data.dateElection).getTime();
    const dateB = new Date(b.data.dateElection).getTime();
    return dateB - dateA;
  });

const organisation = organisations
  .filter((organisation) => organisation.data.pays === country.name)
  .map((organisation) => ({
    nom: organisation.data.nom,
    statut: organisation.data.statut,
    typeOrganisation: organisation.data.typeOrganisation,
    nombreDePaysCouverts: organisation.data.nombreDePaysCouverts,
    ville: organisation.data.ville,
    anneeDeCreation: organisation.data.anneeDeCreation,
    zonesCouverts: organisation.data.zonesCouverts,
    domainesExpertise: organisation.data.domainesExpertise,
    mobilisationsObservateurs: organisation.data.mobilisationsObservateurs,
    siteweb: organisation.data.siteweb,
    telephone: organisation.data.telephone,
    email: organisation.data.email,
    pays: organisation.data.pays,
  }));

const electoralOrganism = {
  politicalSystem: country.politicalSystem,
  electoralModel: country.modele,
  vote: {
    presidentialVote: country.vote.presidentialVote,
    presidentialscrutinMode: country.vote.presidentialscrutinMode,
    presidentialResults: country.vote.presidentialResults,
    legislativeVote: country.vote.legislativeVote,
    legislativeResults: country.vote.legislativeResults,
    legislativeScrutinMode: country.vote.legislativeScrutinMode,
    validationBody: country.vote.validationBody,
    legislativeValidationBody: country.vote.legislativeValidationBody,
    disputesManagementBody: country.vote.disputesManagementBody,
    provisionalResultsBody: country.vote.provisionalResultsBody,
    type: "election-law" as const,
  },
  electoralOrganisms: organismes.map((organisme) => ({
    name: organisme.data.nom,
    ville: organisme.data.ville,
    anneeDeCreation: organisme.data.anneeDeCreation,
    siteweb: organisme.data.siteweb,
    telephone: organisme.data.telephone,
    email: organisme.data.email,
  })),
};

const legalFramework = {
  documents: legalFramework3
    //.filter((r) => r.data.type === "Constitution" || r.data.type === "Loi Électorale")
    .sort((a, b) => b.data.year - a.data.year)
    .slice(0, 6) // Limiter à 4 éléments
    .map((r) => ({
      title: r.data.title,
      type: r.data.type,
      year: r.data.year,
      description: r.data.description || "",
      url: r.data.fichier || "",
    })),
  timeline: [
    {
      year: parseInt(
        country.electoralFramework?.constitution?.match(/\d{4}/)?.[0] ||
          new Date().getFullYear(),
      ),
      event: `Adoption de la Constitution actuelle`,
      type: "constitution",
    },
    {
      year: country.lastElection.year,
      event: `Dernière élection ${country.lastElection.type.toLowerCase()}`,
      type: "election-law",
    },
  ],
};

// Sample election timeline data
const electionEvents = electionEvents3.map((e) => {
  const resultatsElections3 = resultatsElections?.filter(
    (resultat) => resultat.data.Elections_id === e.data.id,
  );
  const defisElection = defis?.filter(
    (defi) =>
      defi.data.resultats === resultatsElections3[0]?.data.id &&
      e.data.statut === "Précédente" &&
      e.data.id === country.id,
  );
  return {
    results:
      e.data.statut === "Précédente"
        ? resultatsElections3[0]?.data.resultats
        : undefined,
    date: e.data.dateElection,
    type: e.data.typeElection,
    status: e.data.statut,
    turnout:
      e.data.statut === "Précédente"
        ? resultatsElections3[0]?.data.participation
        : undefined,
    vainqueur: resultatsElections3[0]?.data.resultats,
    description:
      e.data.statut === "Précédente"
        ? `Élection ${e.data.typeElection.toLowerCase()} ${country.name}`
        : `Prochaine élection ${e.data.typeElection.toLowerCase()} prévue`,
    defis: defisElection.length
      ? defisElection.slice(0, 3).map((defi) => ({
          libelle: defi.data.libelleDefis,
          type: defi.data.typeDefi,
          url: defi.data.sourceDefi,
        }))
      : [],
  };
});

// Simuler des élections à venir
const upcomingElections = [
  {
    type: electionEvents.find(
      (e) => e.status === "En préparation" || e.status === "À venir",
    )?.type,
    date: electionEvents.find(
      (e) => e.status === "En préparation" || e.status === "À venir",
    )?.date,
    daysRemaining: (() => {
      const upcomingDate = electionEvents.find(
        (e) => e.status === "En préparation" || e.status === "À venir",
      )?.date;
      return upcomingDate
        ? Math.ceil(
            (new Date(upcomingDate).getTime() - new Date().getTime()) /
              (1000 * 60 * 60 * 24),
          )
        : null;
    })(),
  },
];

const CountryInterface = {
  code: country.code,
  name: country.name,
  population: country.population,
  lastElection: {
    type: electionEvents.find((e) => e.status === "Précédente")?.type || "N/A",
    year: new Date(
      electionEvents.find((e) => e.status === "Précédente")?.date || 0,
    ).getFullYear(),
    turnout:
      electionEvents.find((e) => e.status === "Précédente")?.turnout || 0,
    nextElectionYear: upcomingElections[0]?.date
      ? new Date(upcomingElections[0].date).getFullYear()
      : 0,
  },
  politicalSystem: country.politicalSystem || "",
  demographics: country.demographics,
};
// Données pour les statistiques clés
const keyStats = [
  {
    label: "Population",
    value: new Intl.NumberFormat("fr-FR").format(country.population),
    icon: FaUsers,
    color: "text-farafina-primary",
  },
  {
    label: "Électeurs Inscrits",
    value: new Intl.NumberFormat("fr-FR").format(
      country.demographics?.voterRegistration?.registered || 0,
    ),
    icon: FaChartBar,
    color: "text-farafina-accent",
  },
  {
    label: "Dernière élection",
    value: electionEvents.find((e) => e.status === "Précédente")?.date
      ? `${electionEvents.find((e) => e.status === "Précédente")?.type} (${new Date(
          electionEvents.find((e) => e.status === "Précédente")?.date || 0,
        ).getFullYear()})`
      : "N/A",
    icon: FaCalendarAlt,
    color: "text-farafina-secondary",
  },
  {
    label: "Participation",
    value: new Intl.NumberFormat("fr-FR").format(
      electionEvents.find((e) => e.status === "Précédente")?.turnout || 0,
    ),
    icon: FaVoteYea,
    color: "text-farafina-secondary",
  },

  {
    label: "Prochaine élection",
    value: upcomingElections[0]?.date
      ? new Date(upcomingElections[0].date).getFullYear()
      : "N/A",
    icon: FaCalendarAlt,
    color: "text-farafina-blue",
  },
];

const socialLinks = [
  {
    name: "Twitter",
    href: (code: string, name: string) =>
      `https://twitter.com/share?url=https://farafina.tech/countries/${code}&text=Voir%20les%20informations%20%C3%A9lectorales%20de%20${name}`,
    title: "Partager sur Twitter",
    icon: FaTwitter,
  },
  {
    name: "LinkedIn",
    href: (code: string, name: string) =>
      `https://www.linkedin.com/sharing/share-offsite/?url=https://farafina.tech/countries/${code}`,
    title: "Partager sur LinkedIn",
    icon: FaLinkedin,
  },
  {
    href: (code: string, name: string) =>
      `https://www.facebook.com/sharer/sharer.php?u=https://farafina.tech/countries/${code}`,
    title: "Partager sur Facebook",
    icon: FaFacebookF,
  },
  {
    name: "Email",
    href: (code: string, name: string) =>
      `mailto:?subject=Voir%20les%20informations%20%C3%A9lectorales%20de%20${name}&body=https://farafina.tech/countries/${code}`,
    title: "Partager par Email",
    icon: FaEnvelope,
  },
];

// Simuler des articles récents
const recentArticles = [
  {
    title: `Préparation des élections de ${country.lastElection.nextElectionYear} au ${country.name}`,
    date: new Date().toLocaleDateString("fr-FR"),
    excerpt: `Les préparatifs pour les prochaines élections ${country.lastElection.type.toLowerCase()} au ${country.name} ont commencé...`,
  },
  {
    title: `Analyse du système électoral ${country.name.toLowerCase()}`,
    date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toLocaleDateString(
      "fr-FR",
    ),
    excerpt: `Une étude approfondie du système électoral ${country.name.toLowerCase()} révèle des défis et des opportunités...`,
  },
];
---

<Layout title={`${country.name} - Informations Électorales`} pageType="detail">
  <PageHeader
    title={country.name}
    subtitle={`Système politique: ${country.politicalSystem}`}
    breadcrumbs={[
      { label: "Accueil", href: "/" },
      { label: "Pays", href: "/countries" },
      { label: country.name },
    ]}
    client:load
  >
    <FaGlobeAfrica className="text-farafina-primary text-3xl" slot="icon" />
  </PageHeader>

  <div data-pagefind-filter="section:Pays" class="container mx-auto px-4 py-8">
    <!-- Bannière du pays avec drapeau et statistiques clés -->
    <div class="bg-white rounded-xl shadow-md overflow-hidden mb-8">
      <!-- <div
        class="relative h-40 bg-gradient-to-r from-farafina-primary to-farafina-secondary"
      > -->
      <div class="relative h-40 bg-gradient-to-r from-[#00853F] to-[#E31B23]">
        <div
          class="absolute inset-0 opacity-20"
          style={`background-image: url(https://flagcdn.com/w1280/${country.code.toLowerCase()}.webp); background-size: cover; background-position: center;`}
        >
        </div>
        <div class="absolute inset-0 flex items-center px-8">
          <div class="flex items-center">
            <img
              src={`https://flagcdn.com/w160/${country.code.toLowerCase()}.webp`}
              alt={`Drapeau ${country.name}`}
              class="w-24 h-16 object-cover rounded shadow-md mr-6"
            />
            <div class="text-white">
              <h1 data-pagefind-index class="text-3xl font-bold">
                {country.name}
              </h1>
              <p class="text-white/80">Langues officielles: {country.langue}</p>
            </div>
          </div>
          <div class="flex items-center space-x-2 ml-auto">
            {
              socialLinks.map((link) => (
                <ToCountryLink
                  href={link.href(country.code.toLowerCase(), country.name)}
                  title={link.title}
                  iconLink={link.icon}
                />
              ))
            }
          </div>
        </div>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-5 gap-6 p-6">
        {
          keyStats.map((stat) => (
            <div class="flex items-center">
              <div class="w-12 h-12 rounded-full bg-gray-100 flex items-center justify-center mr-4">
                <stat.icon className={`text-xl ${stat.color}`} />
              </div>
              <div>
                <span class="block text-sm text-gray-500">{stat.label}</span>
                <span class="block text-xl font-bold text-farafina-dark">
                  {stat.value}
                </span>
              </div>
            </div>
          ))
        }
      </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-8">
      <!-- Carte et informations générales -->
      <div class="lg:col-span-2 space-y-8">
        <!-- Carte interactive -->
        <div class="bg-white rounded-xl shadow-md p-6">
          <h2
            class="text-xl font-bold text-farafina-primary mb-6 flex items-center"
          >
            <FaGlobeAfrica className="mr-2" /> Localisation
          </h2>
          <div class="h-[400px]">
            <AfricaMap client:load selectedCountry={country.code} />
          </div>
        </div>

        <!-- Données démographiques -->
        <div class="bg-white rounded-xl shadow-md p-6">
          <h2
            class="text-xl font-bold text-farafina-primary mb-6 flex items-center"
          >
            <FaUsers className="mr-2" /> Données Démographiques
          </h2>
          <DemographicChart
            client:visible
            demographics={country.demographics}
          />
        </div>
      </div>

      <!-- Sidebar avec informations et élections à venir -->
      <div class="space-y-8">
        <!-- Informations du pays -->
        <div class="bg-white rounded-xl shadow-md p-6">
          <h2
            class="text-xl font-bold text-farafina-primary mb-6 flex items-center"
          >
            <FaGlobeAfrica className="mr-2" /> Informations
          </h2>
          <CountryCard client:load country={CountryInterface} />
        </div>

        <!-- Élections à venir -->
        <div class="bg-white rounded-xl shadow-md p-6">
          <h2
            class="text-xl font-bold text-farafina-secondary mb-6 flex items-center"
          >
            <FaCalendarAlt className="mr-2" /> Prochaine Élection
          </h2>

          {
            upcomingElections.map((election) => (
              <div class="bg-farafina-secondary/5 rounded-lg p-4">
                <div class="flex justify-between items-center mb-3">
                  <span class="font-semibold text-farafina-dark">
                    {election.type}
                  </span>
                  <span class="text-sm text-gray-500">
                    {new Date(election.date).getFullYear()}
                  </span>
                </div>
                <div class="flex items-center justify-between">
                  <div class="text-sm text-gray-600">
                    <span class="font-medium">Jours restants:</span>
                  </div>
                  <div class="text-2xl font-bold text-farafina-secondary">
                    {election.daysRemaining}
                  </div>
                </div>
                <div class="mt-4">
                  <div class="w-full bg-gray-200 rounded-full h-2.5">
                    <div
                      class="bg-farafina-secondary h-2.5 rounded-full"
                      style={`width: ${100 - (election.daysRemaining / 365) * 100}%`}
                    />
                  </div>
                </div>
              </div>
            ))
          }

          <div class="mt-4">
            <a
              href="/elections/calendar"
              class="text-farafina-secondary hover:text-farafina-secondary/80 transition-colors text-sm"
            >
              Voir le calendrier électoral complet →
            </a>
          </div>
        </div>

        <!-- Articles récents -->
        <!--div class="bg-white rounded-xl shadow-md p-6">
          <h2
            class="text-xl font-bold text-farafina-accent mb-6 flex items-center"
          >
            <FaNewspaper class="mr-2" /> Articles récents
          </h2>

          <div class="space-y-4">
            {
              recentArticles.map((article) => (
                <div class="border-b border-gray-100 pb-4 last:border-0 last:pb-0">
                  <h3 class="font-semibold text-farafina-dark hover:text-farafina-accent transition-colors">
                    <a href="#">{article.title}</a>
                  </h3>
                  <p class="text-sm text-gray-500 mb-2">{article.date}</p>
                  <p class="text-sm text-gray-600">{article.excerpt}</p>
                </div>
              ))
            }
          </div>

          <div class="mt-4">
            <a
              href="/resources"
              class="text-farafina-accent hover:text-farafina-accent/80 transition-colors text-sm"
            >
              Voir toutes les actualités →
            </a>
          </div>
        </div-->
      </div>
    </div>

    <!-- Système électoral et cadre juridique -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
      <!-- Système électoral -->
      <div class="bg-white rounded-xl shadow-md p-6">
        <h2
          class="text-xl font-bold text-farafina-primary mb-6 flex items-center"
        >
          <FaVoteYea className="mr-2" /> Système Électoral
        </h2>
        <div class="space-y-6">
          <div class="bg-farafina-primary/5 rounded-lg p-4">
            <h3 class="font-semibold text-farafina-primary mb-2">
              Système Politique
            </h3>
            <p class="text-gray-700">{country.politicalSystem}</p>
          </div>

          <div class="grid grid-cols-2 gap-6">
            <div class="bg-farafina-primary/5 rounded-lg p-4">
              <h3 class="font-semibold text-farafina-primary mb-2">
                Modèle de Gestion des Élections
              </h3>
              <p class="text-gray-700">{electoralOrganism.electoralModel}</p>
            </div>
            <div class="bg-farafina-primary/5 rounded-lg p-4">
              <h3 class="font-semibold text-farafina-primary mb-2">
                Organismes Électoraux
              </h3>
              <ul class="list-disc pl-4">
                {
                  electoralOrganism.electoralOrganisms.map((eo) => (
                    <li>
                      <a
                        href={eo?.siteweb}
                        class="text-blue-600 underline hover:no-underline"
                        target="_blank"
                        rel="noopener noreferrer"
                      >
                        {eo.name}
                      </a>
                    </li>
                  ))
                }
              </ul>
            </div>
          </div>
          <div class="grid grid-cols-2 gap-6">
            <div class="bg-farafina-primary/5 rounded-lg p-4">
              <h3 class="font-semibold text-farafina-primary mb-2">
                Régime de vote
              </h3>
              <ul class="list-disc pl-4">
                <li>
                  <span class="font-bold text-gray-700">Présidentiel</span>: {
                    electoralOrganism.vote.presidentialVote
                  }
                </li>
                <li>
                  <span class="font-bold text-gray-700">Législatif</span>: {
                    electoralOrganism.vote.legislativeVote
                  }
                </li>
              </ul>
            </div>
            <div class="bg-farafina-primary/5 rounded-lg p-4">
              <h3 class="font-semibold text-farafina-primary mb-2">
                Mode de scrutin
              </h3>
              <ul class="list-disc pl-4">
                <li>
                  <span class="font-bold text-gray-700">Présidentiel</span>: {
                    electoralOrganism.vote.presidentialscrutinMode
                  }
                </li>
                <li>
                  <span class="font-bold text-gray-700">Législatif</span>: {
                    electoralOrganism.vote.legislativeScrutinMode
                  }
                </li>
              </ul>
            </div>
          </div>

          <div class="bg-farafina-primary/5 rounded-lg p-4">
            <h3 class="font-semibold text-farafina-primary mb-2">
              Validation des candidatures
            </h3>
            <ul class="list-disc pl-4">
              <li>
                <span class="font-bold text-gray-700">Présidentiel</span>: {
                  electoralOrganism.vote.validationBody
                }
              </li>
              <li>
                <span class="font-bold text-gray-700">Législatif</span>: {
                  electoralOrganism.vote.legislativeValidationBody
                }
              </li>
            </ul>
          </div>

          <div class="bg-farafina-primary/5 rounded-lg p-4">
            <h3 class="font-semibold text-farafina-primary mb-2">
              Organe de proclamation des résultats provisoires
            </h3>
            <p class="text-gray-700">
              {electoralOrganism.vote.provisionalResultsBody}
            </p>
          </div>

          <div class="bg-farafina-primary/5 rounded-lg p-4">
            <h3 class="font-semibold text-farafina-primary mb-2">
              Organe de proclamation des résultats définitifs
            </h3>
            <ul class="list-disc pl-4">
              <li>
                <span class="font-bold text-gray-700">Présidentiel</span>: {
                  electoralOrganism.vote.presidentialResults
                }
              </li>
              <li>
                <span class="font-bold text-gray-700">Législatif</span>: {
                  electoralOrganism.vote.legislativeResults
                }
              </li>
            </ul>
          </div>

          <div class="bg-farafina-primary/5 rounded-lg p-4">
            <h3 class="font-semibold text-farafina-primary mb-2">
              Gestion du contentieux électoral
            </h3>
            <p class="text-gray-700">
              {electoralOrganism.vote.disputesManagementBody}
            </p>
          </div>
        </div>
      </div>

      <!-- Ressources supplémentaires -->
      <div class="bg-white rounded-xl shadow-md p-6">
        <h2 class="text-xl font-bold text-farafina-blue mb-6 flex items-center">
          <FaBalanceScale className="mr-2" /> Ressources supplémentaires
        </h2>
        <LegalFramework
          client:visible
          documents={legalFramework?.documents || legalFramework.documents}
          timeline={electoralOrganism?.vote || electoralOrganism.vote}
          organisations={organisation}
          electoralOrganism={electoralOrganism?.vote || electoralOrganism.vote}
        />
        <div class="mt-4">
          <a
            href="/resources"
            class="text-farafina-blue hover:text-farafina-secondary/80 transition-colors text-sm"
          >
            Voir toutes les ressources →
          </a>
        </div>
      </div>
    </div>

    <!-- Chronologie électorale -->
    <div class="bg-white rounded-xl shadow-md p-6 mb-8">
      <h2 class="text-xl font-bold text-farafina-accent mb-6 flex items-center">
        <FaCalendarAlt className="mr-2" /> Chronologie Électorale
      </h2>
      <ElectionTimeline
        client:visible
        events={electionEvents}
        countryName={country.name}
      />
    </div>

    <!-- Liste des défis électoraux -->
    <div class="bg-white rounded-lg shadow-md p-6 mb-8">
      <div class="flex items-center justify-between mb-6">
        <h2 class="text-xl font-bold text-farafina-accent flex items-center">
          <FaExclamationTriangle className="mr-2" /> Défis de la dernière élection
        </h2>
        <a
          href="/elections/challenges"
          class="text-farafina-accent hover:text-farafina-accent/80 transition-colors text-sm font-medium"
        >
          Voir tous les défis →
        </a>
      </div>

      <div class="space-y-6">
        <div class="grid grid-cols-3 gap-6">
          <div class="text-sm p-5 text-gray-500">
            <h4>Type de défi</h4>
          </div>
          <div class="text-sm p-2 text-gray-500">
            <h4>Description</h4>
          </div>
          <div class="text-sm text-gray-500"></div>
        </div>
        {
          electionEvents.map((event) =>
            event.defis.map((challenge) => (
              <div
                key={challenge.libelle}
                class="border border-red-100 rounded-lg p-5 hover:shadow-md transition-shadow"
              >
                <div class="grid grid-cols-3 gap-6">
                  <p class="font-medium text-farafina-accent">
                    {challenge.type}
                  </p>
                  <p class="text-gray-700">{challenge.libelle}</p>
                  <div class="flex justify-end">
                    <a
                      href={challenge.url}
                      target="_blank"
                      class="text-farafina-accent hover:text-farafina-accent/80 transition-colors"
                    >
                      Voir l'analyse complète →
                    </a>
                  </div>
                </div>
              </div>
            )),
          )
        }
      </div>
    </div>

    <!-- Ressources et liens utiles -->
    <div
      class="bg-gradient-to-r from-farafina-primary to-farafina-secondary rounded-xl shadow-md overflow-hidden"
    >
      <div class="grid grid-cols-1 md:grid-cols-2">
        <div class="p-8 text-white">
          <h2 class="text-2xl font-bold mb-4">Ressources supplémentaires</h2>
          <p class="mb-6 text-white/90">
            Accédez à notre base de données complète sur les élections, les
            résultats et les analyses concernant {country.name}.
          </p>
          <div class="space-y-3">
            <a
              href={`/elections?country=${country.code.toLowerCase()}`}
              class="block px-6 py-3 bg-white text-farafina-primary font-medium rounded-lg hover:bg-white/90 transition-colors"
            >
              Voir les élections de {country.name}
            </a>
            <a
              href="/resources"
              class="block px-6 py-3 bg-white/20 text-white font-medium rounded-lg hover:bg-white/30 transition-colors"
            >
              Consulter les rapports d'analyse
            </a>
          </div>
        </div>
        <div class="hidden md:block relative">
          <Image
            src="/images/mapping.webp"
            alt={`Ressources sur ${country.name}`}
            class="w-full h-full object-cover"
            width={400}
            height={300}
            inferSize
          />
          <div class="absolute inset-0 bg-black/20"></div>
        </div>
      </div>
    </div>
  </div>
</Layout>
