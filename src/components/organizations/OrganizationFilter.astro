---
import { FaFilter, FaGlobeAfrica, FaClipboardList, FaCalendarAlt, FaSortAlphaDown } from 'react-icons/fa';

interface Props {
  showRegions?: boolean;
  showTypes?: boolean;
  showYears?: boolean;
  showSort?: boolean;
}

const { 
  showRegions = true, 
  showTypes = true, 
  showYears = true, 
  showSort = true 
} = Astro.props;

// Options de filtrage
const expertiseOptions = [
  "Observation Électorale",
  "Transparence",
  "Formation Civique",
  "Monitoring Électoral",
  "Analyse Politique",
  "Éducation Civique",
  "Droits Humains",
  "Médias",
  "Technologie Électorale"
];

const regionOptions = [
  "Afrique du Nord",
  "Afrique de l'Ouest",
  "Afrique Centrale",
  "Afrique de l'Est",
  "Afrique Australe",
];

const typeOptions = [
  "ONG Internationale",
  "Organisation Locale",
  "Institution Académique",
  "Réseau Régional",
  "Organisme Gouvernemental"
];

const sortOptions = [
  { label: "Alphabétique (A-Z)", value: "alpha-asc" },
  { label: "Alphabétique (Z-A)", value: "alpha-desc" },
  { label: "Plus récentes", value: "date-desc" },
  { label: "Plus anciennes", value: "date-asc" }
];
---

<div class="bg-white rounded-lg shadow-md p-6 sticky top-24">
  <div class="flex items-center mb-6">
    <FaFilter className="text-farafina-primary mr-2" />
    <h2 class="text-xl font-bold text-farafina-dark">Filtres</h2>
  </div>

  <div class="space-y-6">
    <!-- Domaines d'expertise -->
    <div>
      <h3 class="font-semibold mb-3 text-farafina-secondary">Domaines d'expertise</h3>
      <div class="space-y-2 max-h-48 overflow-y-auto pr-2">
        {expertiseOptions.map(option => (
          <label class="flex items-center">
            <input type="checkbox" class="form-checkbox rounded text-farafina-primary focus:ring-farafina-primary" />
            <span class="ml-2 text-gray-700 text-sm">{option}</span>
          </label>
        ))}
      </div>
    </div>

    <!-- Régions -->
    {showRegions && (
      <div>
        <h3 class="font-semibold mb-3 text-farafina-secondary">Régions</h3>
        <div class="space-y-2">
          {regionOptions.map(option => (
            <label class="flex items-center">
              <input type="checkbox" class="form-checkbox rounded text-farafina-primary focus:ring-farafina-primary" />
              <span class="ml-2 text-gray-700 text-sm">{option}</span>
            </label>
          ))}
        </div>
      </div>
    )}

    <!-- Types d'organisations -->
    {showTypes && (
      <div>
        <h3 class="font-semibold mb-3 text-farafina-secondary">Types d'organisations</h3>
        <div class="space-y-2">
          {typeOptions.map(option => (
            <label class="flex items-center">
              <input type="checkbox" class="form-checkbox rounded text-farafina-primary focus:ring-farafina-primary" />
              <span class="ml-2 text-gray-700 text-sm">{option}</span>
            </label>
          ))}
        </div>
      </div>
    )}

    <!-- Année de création -->
    {showYears && (
      <div>
        <h3 class="font-semibold mb-3 text-farafina-secondary">Année de création</h3>
        <div class="flex items-center space-x-4">
          <div>
            <label class="block text-xs text-gray-600 mb-1">De</label>
            <input 
              type="number" 
              min="1950" 
              max="2023" 
              value="2000" 
              class="w-24 px-2 py-1 border rounded-md focus:ring-1 focus:ring-farafina-primary focus:border-farafina-primary text-sm"
            />
          </div>
          <div>
            <label class="block text-xs text-gray-600 mb-1">À</label>
            <input 
              type="number" 
              min="1950" 
              max="2023" 
              value="2023" 
              class="w-24 px-2 py-1 border rounded-md focus:ring-1 focus:ring-farafina-primary focus:border-farafina-primary text-sm"
            />
          </div>
        </div>
      </div>
    )}

    <!-- Tri -->
    {showSort && (
      <div>
        <h3 class="font-semibold mb-3 text-farafina-secondary">Trier par</h3>
        <select class="w-full px-3 py-2 border rounded-md focus:ring-1 focus:ring-farafina-primary focus:border-farafina-primary text-sm">
          {sortOptions.map(option => (
            <option value={option.value}>{option.label}</option>
          ))}
        </select>
      </div>
    )}

    <!-- Boutons d'action -->
    <div class="pt-4 border-t border-gray-200 flex flex-col space-y-3">
      <button class="w-full py-2 bg-farafina-primary text-white rounded-lg hover:bg-farafina-primary/90 transition-colors">
        Appliquer les filtres
      </button>
      <button class="w-full py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors">
        Réinitialiser
      </button>
    </div>
  </div>
</div>

<script>
  // Script pour gérer les filtres côté client
  document.addEventListener('DOMContentLoaded', () => {
    const checkboxes = document.querySelectorAll('input[type="checkbox"]');
    const resetButton = document.querySelector('button:last-child');

    resetButton?.addEventListener('click', () => {
      checkboxes.forEach(checkbox => {
        (checkbox as HTMLInputElement).checked = false;
      });
    });
  });
</script>

