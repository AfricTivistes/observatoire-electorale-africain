---
import Icon from 'astro-icon';

interface Props {
  activePage?: string;
}

const { activePage = 'home' } = Astro.props;

const menuItems = [
  { href: '/', label: 'Accueil', slug: 'home' },
  { href: '/countries', label: 'Pays', slug: 'countries' },
  { href: '/cso', label: 'Organisations', slug: 'cso' },
  { href: '/elections', label: 'Élections', slug: 'elections' },
  { href: '/about', label: 'À Propos', slug: 'about' }
];
---

<script>
  // Utiliser un ID unique pour cette fonction pour éviter les conflits
  window.farafinaToggleMenu = function() {
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    
    const isHidden = mobileMenu?.classList.contains('translate-x-full');

    if (isHidden) {
      mobileMenu?.classList.remove('translate-x-full', 'opacity-0');
      mobileMenu?.classList.add('translate-x-0', 'opacity-100');
      document.body.style.overflow = 'hidden';
      mobileMenuButton?.setAttribute('aria-expanded', 'true');
    } else {
      mobileMenu?.classList.add('translate-x-full', 'opacity-0');
      mobileMenu?.classList.remove('translate-x-0', 'opacity-100');
      document.body.style.overflow = '';
      mobileMenuButton?.setAttribute('aria-expanded', 'false');
    }
  };

  // Fonction pour initialiser tous les événements
  const initializeMenu = () => {
    const mobileMenu = document.getElementById('mobile-menu');
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const closeMenuButton = document.getElementById('close-menu-button');
    
    // Réinitialiser les événements pour éviter les doublons
    mobileMenuButton?.removeEventListener('click', window.farafinaToggleMenu);
    closeMenuButton?.removeEventListener('click', window.farafinaToggleMenu);
    
    // Ajouter les gestionnaires d'événements
    mobileMenuButton?.addEventListener('click', window.farafinaToggleMenu);
    closeMenuButton?.addEventListener('click', window.farafinaToggleMenu);

    // Fermer le menu lorsqu'on clique sur un lien à l'intérieur
    const mobileMenuLinks = mobileMenu?.querySelectorAll('a');
    mobileMenuLinks?.forEach(link => {
      link.addEventListener('click', () => {
        mobileMenu?.classList.add('translate-x-full', 'opacity-0');
        mobileMenu?.classList.remove('translate-x-0', 'opacity-100');
        document.body.style.overflow = '';
        mobileMenuButton?.setAttribute('aria-expanded', 'false');
      });
    });

    // Fermer le menu quand on clique en dehors
    document.addEventListener('click', (e) => {
      if (mobileMenu && mobileMenuButton && 
          !mobileMenu.contains(e.target as Node) && 
          !mobileMenuButton.contains(e.target as Node) &&
          !mobileMenu.classList.contains('translate-x-full')) {
        mobileMenu.classList.add('translate-x-full', 'opacity-0');
        mobileMenu.classList.remove('translate-x-0', 'opacity-100');
        document.body.style.overflow = '';
        mobileMenuButton.setAttribute('aria-expanded', 'false');
      }
    });
  };
  
  // Initialiser le menu au chargement de la page
  document.addEventListener('DOMContentLoaded', initializeMenu);
  
  // Important: Astro View Transitions - réinitialiser le menu après chaque navigation
  document.addEventListener('astro:page-load', initializeMenu);
</script>

<header class="bg-green text-farafina-dark py-4 fixed w-full top-0 z-50 shadow-sm">
  <div class="container mx-auto flex justify-between items-center px-4">
    <div class="flex items-center">
    <a href="/">
      <img src="/images/Farafina-logo.svg" alt="Farafina Logo" class="h-auto w-28"/>
    </a>
    </div>

    <!-- Desktop Navigation -->
    <nav class="hidden md:block">
      <ul class="flex space-x-6">
        {menuItems.map(item => (
          <li>
            <a 
              href={item.href}
              class={`
                ${activePage === item.slug 
                  ? 'text-farafina-primary font-bold border-b-2 border-farafina-primary' 
                  : 'text-farafina-dark hover:text-farafina-primary'}
                transition-colors duration-300
              `}
            >
              {item.label}
            </a>
          </li>
        ))}
      </ul>
    </nav>

    <!-- Mobile Menu Button -->
    <button 
      id="mobile-menu-button"
      class="md:hidden p-2 rounded-lg hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-farafina-accent transition-colors duration-300"
      aria-label="Toggle menu"
      aria-expanded="false"
    >
      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M4 6h16M4 12h16M4 18h16"/>
      </svg>
    </button>
  </div>

  <!-- Mobile Menu -->
  <div 
    id="mobile-menu" 
    class="fixed inset-y-0 right-0 w-64 bg-white transform translate-x-full opacity-0 transition-all duration-300 ease-in-out md:hidden shadow-lg z-50"
  >
    <nav class="h-full flex flex-col">
      <div class="p-4 border-b border-farafina-secondary">
        <button 
          id="close-menu-button"
          class="ml-auto block p-2 rounded-lg hover:bg-farafina-secondary focus:outline-none focus:ring-2 focus:ring-farafina-accent transition-colors duration-300"
          aria-label="Close menu"
        >
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>
      </div>
      <ul class="flex-1 overflow-y-auto">
        {menuItems.map(item => (
          <li>
            <a 
              href={item.href}
              class={`
                block py-3 px-6 border-b border-farafina-secondary
                ${activePage === item.slug 
                  ? 'bg-farafina-primary text-white font-bold' 
                  : 'text-farafina-dark hover:bg-farafina-primary hover:text-white'}
                transition-all duration-300
              `}
            >
              {item.label}
            </a>
          </li>
        ))}
      </ul>
    </nav>
  </div>
</header>

<div class="h-24 md:h-20"><!-- Spacer for fixed header --></div>